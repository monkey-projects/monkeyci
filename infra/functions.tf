resource "google_storage_bucket" "src_bucket" {
  # Bucket name is generated by cloud function deployment
  name     = "gcf-v2-sources-209111224299-europe-west1"
  location = var.region
  uniform_bucket_level_access = true

  cors {
    max_age_seconds = 0
    method = [ "GET" ]
    origin = [
      "https://*.cloud.google.com",
      "https://*.corp.google.com",
      "https://*.corp.google.com:*",
      "https://*.cloud.google",
      "https://*.byoid.goog",
    ]
  }

  lifecycle_rule {
    action {
      type = "Delete"
    }
    condition {
      age                        = 0
      days_since_custom_time     = 0
      days_since_noncurrent_time = 0
      matches_prefix             = []
      matches_storage_class      = []
      matches_suffix             = []
      num_newer_versions         = 3
      with_state                 = "ARCHIVED"
    }
  }
}

resource "google_storage_bucket_object" "webhook_trigger_src" {
  name   = "webhook-trigger/function-source.zip"
  bucket = google_storage_bucket.src_bucket.name
  source = "webhook-trigger.zip"  # Add path to the zipped function source code
}

resource "google_cloudfunctions2_function" "webhook_trigger" {
  name = "webhook-trigger"
  description = "Webhook endpoint for build triggers"
  location = var.region

  build_config {
    runtime = "nodejs18"
    entry_point = "buildTrigger"  # Set the entry point 
    source {
      storage_source {
        bucket = google_storage_bucket.src_bucket.name
        object = google_storage_bucket_object.webhook_trigger_src.name
      }
    }
  }

  # For public access a principal needs to be added to the service account
  # (not seen here)
  service_config {
    max_instance_count  = 1
    available_memory    = "256M"
    timeout_seconds     = 60
  }
}

output "function_uri" { 
  value = google_cloudfunctions2_function.webhook_trigger.service_config[0].uri
}
